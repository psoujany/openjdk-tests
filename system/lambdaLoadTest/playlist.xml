<?xml version='1.0' encoding='UTF-8'?>
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../TKG/playlist.xsd">
	<include>../systemtest.mk</include>
	<!-- 
	Special target to get machine information. This target is in each subfolder playlist.xml.
	To avoid test target duplication, this belongs to sanity, extended and special. Regular test should only belong to one level -->
	<test>
		<testCaseName>MachineInfo</testCaseName>
		<command>$(JAVA_COMMAND) -cp $(JVM_TEST_ROOT)$(D)TKG$(D)bin$(D)TestKitGen.jar org.openj9.envInfo.EnvDetector MachineInfo; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
			<level>extended</level>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<!-- Exclude LambdaLoad test on Linux x64 non-compressedrefs sdks for OpenJ9 builds only,
		Reason: https://github.com/eclipse/openj9/issues/2209)-->
	<test>
		<testCaseName>LambdaLoadTest_Hotspot</testCaseName>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
		</impls>
	</test>
	<test>
		<testCaseName>LambdaLoadTest_OpenJ9_NonLinux</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>LambdaLoadTest_OpenJ9_Linux_CompressedRefs</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>os.linux,vm.cmprssptrs</platformRequirements>
	</test>
	<test>
		<testCaseName>JdiTest</testCaseName>
		<disabled>
			<comment>AdoptOpenJDK/openjdk-systemtest/issues/63</comment>
		</disabled>
		<variations>
			<variation>Mode150</variation>
			<variation>Mode650</variation>
			<variation>Mode1000</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=JdiTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<!-- Temporarily excluding this test from linux ppc64le xl and linux x64 xl, ref: https://github.com/eclipse/openj9/issues/6475 -->
	<test>
		<testCaseName>LambdaLoadTest_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>bits.64,^arch.arm,^spec.linux_ppc-64_le,^spec.linux_x86-64</platformRequirements>
	</test>
	<test>
		<testCaseName>LambdaLoadTest_OpenJ9_NonLinux_special</testCaseName>
		<variations>
			<variation>Mode101</variation>
			<variation>Mode103</variation>
			<variation>Mode104</variation>
			<variation>Mode107</variation>
			<variation>Mode112</variation>
			<variation>Mode113</variation>
			<variation>Mode121</variation>
			<variation>Mode122</variation>
			<variation>Mode145</variation>
			<variation>Mode187</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode501</variation>
			<variation>Mode551</variation>
			<variation>Mode553</variation>
			<variation>Mode554</variation>
			<variation>Mode555</variation>
			<variation>Mode556</variation>
			<variation>Mode557</variation>
			<variation>Mode607</variation>
			<variation>Mode614</variation>
			<variation>Mode615</variation>
			<variation>Mode687</variation>
			<variation>Mode688</variation>
			<variation>Mode107-OSRG</variation>
			<variation>Mode110-OSRG</variation>
			<variation>Mode610-OSRG</variation>
			<variation>Mode612-OSRG</variation>
			<variation>Mode645</variation>
			<variation>-Xgcpolicy:gencon -Xgc:dynamicBreadthFirstScanOrdering</variation>
			<!--Note: -Xint modes Mode108, Mode109, Mode109-CS, Mode159, Mode159-CS, Mode550 should be run manually -->
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>LambdaLoadTest_OpenJ9_Linux_CompressedRefs_special</testCaseName>
		<variations>
			<variation>Mode101</variation>
			<variation>Mode103</variation>
			<variation>Mode104</variation>
			<variation>Mode107</variation>
			<variation>Mode112</variation>
			<variation>Mode113</variation>
			<variation>Mode121</variation>
			<variation>Mode122</variation>
			<variation>Mode145</variation>
			<variation>Mode187</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode501</variation>
			<variation>Mode551</variation>
			<variation>Mode553</variation>
			<variation>Mode554</variation>
			<variation>Mode555</variation>
			<variation>Mode556</variation>
			<variation>Mode557</variation>
			<variation>Mode607</variation>
			<variation>Mode614</variation>
			<variation>Mode615</variation>
			<variation>Mode687</variation>
			<variation>Mode688</variation>
			<variation>Mode107-OSRG</variation>
			<variation>Mode110-OSRG</variation>
			<variation>Mode610-OSRG</variation>
			<variation>Mode612-OSRG</variation>
			<variation>Mode645</variation>
			<variation>-Xgcpolicy:gencon -Xgc:dynamicBreadthFirstScanOrdering</variation>
			<!--Note: -Xint modes Mode108, Mode109, Mode109-CS, Mode159, Mode159-CS, Mode550 should be run manually -->
		</variations>
		<command>$(SYSTEMTEST_CMD_TEMPLATE) -test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
		<platformRequirements>os.linux,vm.cmprssptrs</platformRequirements>
	</test>
</playlist>
